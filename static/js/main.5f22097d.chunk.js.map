{"version":3,"sources":["Header/logo.svg","Header/Header.tsx","Main/Main.tsx","TimeUnit/TimeUnit.tsx","Timeline/Timeline.tsx","Layout/Layout.tsx","App/App.tsx","index.tsx"],"names":["module","exports","Header","className","href","src","Logo","alt","Main","children","cnTimeUnit","cn","TimeUnit","min","h","id","String","cnTimeline","Timeline","timeUnitValueInMins","unitsPerHour","unitsPerDay","useState","document","body","clientWidth","isDesktop","setIsDesktop","isMouseDowned","setIsMouseDowned","start","end","selectedRange","setSelectedRange","window","addEventListener","checkIsTimeUnit","el","classList","contains","getActiveLine","e","time","target","value","match","currTimeUnits","getElementsByClassName","length","i","toggle","add","onMouseDown","selectedTimeUnits","remove","makeTimeUnitsUnselected","Number","getAttribute","onMouseMove","timeUnits","currTimeUnitId","onMouseUp","hoursLine","val","push","key","onClick","hours","makeHoursLine","minutesLine","minutes","makeMinutesLine","Math","floor","makeGrid","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5f22097d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ffa9a4a.svg\";","import React, { FC } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './logo.svg';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a href=\"/\">\r\n                <img className=\"Header-Logo\" src={Logo} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { FC } from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main: FC = ({children}) => {\r\n    return (\r\n        <main className=\"Main\">\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { FC } from 'react';\r\nimport './TimeUnit.scss';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeUnit = cn('TimeUnit');\r\n\r\ninterface TimeUnitProps {\r\n    min: number,\r\n    h: number,\r\n    id: number\r\n}\r\n\r\nconst TimeUnit: FC<TimeUnitProps> = ({ min, h, id }) => {\r\n    return (\r\n        <div\r\n            id={String(id)}\r\n            className={cnTimeUnit({ h, min })}\r\n        >\r\n            {/* <div className={cnTimeUnit('Side', {'back': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'left': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'right': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'top': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'bottom': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'front': true})}></div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeUnit;","import React, { FC, useState } from 'react';\r\nimport './Timeline.scss';\r\nimport TimeUnit from '../TimeUnit/TimeUnit'\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeline = cn('Timeline');\r\n\r\ninterface TimelineProps {\r\n    timeUnitValueInMins: number\r\n}\r\n\r\nconst Timeline: FC<TimelineProps> = ({ timeUnitValueInMins }) => {\r\n    const unitsPerHour = 60 / timeUnitValueInMins;\r\n    const unitsPerDay = 24 * unitsPerHour;\r\n    const [ isDesktop, setIsDesktop ] = useState(document.body.clientWidth > 700);\r\n    const [ isMouseDowned, setIsMouseDowned ] = useState(false);\r\n    const [ selectedRange, setSelectedRange ] = useState({start: 0, end: 0});\r\n\r\n    window.addEventListener('resize', () => {\r\n        setIsDesktop(document.body.clientWidth > 700);\r\n    });\r\n\r\n    const checkIsTimeUnit = (el: any) => {\r\n        if (el.classList.contains('TimeUnit')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const makeTimeUnitsUnselected = () => {\r\n        const selectedTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n\r\n        while (selectedTimeUnits.length) {\r\n            selectedTimeUnits[selectedTimeUnits.length - 1].classList.remove('TimeUnit_selected');\r\n        }\r\n    };\r\n\r\n    const handleMouseDown = (e: any) => {\r\n        if (checkIsTimeUnit(e.target)) {\r\n            makeTimeUnitsUnselected();\r\n            e.target.classList.add('TimeUnit_selected');\r\n            setIsMouseDowned(true);\r\n            setSelectedRange( {start: Number((e.target as HTMLElement).getAttribute('id')), end: 0} );\r\n        }\r\n    };\r\n\r\n    const handleMouseMove = (e: any) => {\r\n        if (isMouseDowned) {\r\n            if (checkIsTimeUnit(e.target)) {\r\n                setSelectedRange( { ...selectedRange, end: Number((e.target as HTMLElement).getAttribute('id'))} );\r\n\r\n                const timeUnits = document.getElementsByClassName('TimeUnit');\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    const currTimeUnitId = Number(timeUnits[i].getAttribute('id'));\r\n                    if (selectedRange.start <= selectedRange.end) {\r\n                        if (currTimeUnitId >= selectedRange.start && currTimeUnitId <= selectedRange.end) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    } else {\r\n                        if (currTimeUnitId >= selectedRange.end && currTimeUnitId <= selectedRange.start) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = (e: any) => {\r\n        setIsMouseDowned(false);\r\n    };\r\n\r\n    const getActiveLine = (e: any) => {\r\n        const time = e.target.classList.value.match(/(_h_|_min_).+/);\r\n\r\n        if (time) {\r\n            const currTimeUnits = document.getElementsByClassName(`TimeUnit${time[0]}`);\r\n            const currActiveTimeUnits = document.getElementsByClassName(`TimeUnit${time[0]} TimeUnit_selected`);\r\n            \r\n            if (currActiveTimeUnits.length === currTimeUnits.length) {\r\n                for (let i = 0; i < currTimeUnits.length; i++) {\r\n                    currTimeUnits[i].classList.toggle('TimeUnit_selected');\r\n                }\r\n            } else {\r\n                for (let i = 0; i < currTimeUnits.length; i++) {\r\n                    currTimeUnits[i].classList.add('TimeUnit_selected');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const makeGrid = () => {\r\n        const timeUnits = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / 24) * timeUnitValueInMins + timeUnitValueInMins;\r\n                if (i % 24 === 0) {\r\n                    timeUnits.push(<div\r\n                        key={`time-${i}`}\r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {minutes: true, min: val})}\r\n                    >{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit\r\n                    id={i}\r\n                    h={i % 24 + 1}\r\n                    min={val}\r\n                    key={i} \r\n                />);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / unitsPerHour) + 1;\r\n                if (i % unitsPerHour === 0) {\r\n                    timeUnits.push(<div \r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit \r\n                    id={i}\r\n                    h={val}\r\n                    min={i % unitsPerHour * timeUnitValueInMins + timeUnitValueInMins}\r\n                    key={i} \r\n                />);\r\n            }\r\n        }\r\n        \r\n\r\n        return timeUnits;\r\n    };\r\n\r\n    const makeHoursLine = () => {\r\n        const hoursLine = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i <= 24; i++) {\r\n                const val = i ? i : '';\r\n                hoursLine.push(<div\r\n                    key={i}\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return hoursLine;\r\n    };\r\n\r\n    const makeMinutesLine = () => {\r\n        const minutesLine = [];\r\n\r\n        if (!isDesktop) {\r\n            for (let i = 0; i <= unitsPerHour; i++) {\r\n                const val = i ? i * timeUnitValueInMins : '';\r\n                minutesLine.push(<div\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {minutes: true, min: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return minutesLine;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n            className={cnTimeline()}\r\n        >\r\n            {isDesktop ? makeHoursLine() : makeMinutesLine()}\r\n            {makeGrid()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;","import React, { FC } from 'react';\r\nimport './Layout.scss';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Timeline from '../Timeline/Timeline';\r\n\r\nconst Layout: FC = () => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <Header />\r\n            <Main>\r\n                <Timeline timeUnitValueInMins={5} />\r\n            </Main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { FC } from 'react';\nimport './App.css';\nimport Layout from '../Layout/Layout';\n\nconst App: FC = () => {\n    return (\n        <Layout />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}