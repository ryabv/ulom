{"version":3,"sources":["Header/logo.svg","Header/Header.tsx","Main/Main.tsx","TimeUnit/TimeUnit.tsx","Timeline/Timeline.tsx","Layout/Layout.tsx","App/App.tsx","index.tsx"],"names":["module","exports","Header","className","href","src","Logo","alt","Main","children","cnTimeUnit","cn","TimeUnit","min","h","useState","isSelected","setIsSelected","selected","onClick","cnTimeline","Timeline","timeUnitValueInMins","unitsPerHour","unitsPerDay","document","body","clientWidth","isDesktop","setIsDesktop","window","addEventListener","getActiveLine","e","time","target","classList","value","match","currTimeUnits","getElementsByClassName","length","i","toggle","add","hoursLine","val","push","key","hours","makeHoursLine","minutesLine","minutes","makeMinutesLine","timeUnits","Math","floor","makeGrid","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.63d2e140.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ffa9a4a.svg\";","import React, { FC } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './logo.svg';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a href=\"/\">\r\n                <img className=\"Header-Logo\" src={Logo} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { FC } from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main: FC = ({children}) => {\r\n    return (\r\n        <main className=\"Main\">\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { FC, useState } from 'react';\r\nimport './TimeUnit.scss';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeUnit = cn('TimeUnit');\r\n\r\ninterface TimeUnitProps {\r\n    min?: number,\r\n    h?: number\r\n}\r\n\r\nconst TimeUnit: FC<TimeUnitProps> = ({ min, h }) => {\r\n    const [ isSelected, setIsSelected ] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsSelected(!isSelected);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={isSelected ? cnTimeUnit({ h, min, selected: true }) : cnTimeUnit({ h, min })}\r\n            onClick={handleClick}\r\n        >\r\n            {/* <div className={cnTimeUnit('Side', {'back': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'left': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'right': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'top': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'bottom': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'front': true})}></div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeUnit;","import React, { FC, useState } from 'react';\r\nimport './Timeline.scss';\r\nimport TimeUnit from '../TimeUnit/TimeUnit'\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeline = cn('Timeline');\r\n\r\ninterface TimelineProps {\r\n    timeUnitValueInMins: number\r\n}\r\n\r\nconst Timeline: FC<TimelineProps> = ({ timeUnitValueInMins }) => {\r\n    const unitsPerHour = 60 / timeUnitValueInMins;\r\n    const unitsPerDay = 24 * unitsPerHour;\r\n    const [ isDesktop, setIsDesktop ] = useState(document.body.clientWidth > 700);\r\n\r\n    window.addEventListener('resize', () => {\r\n        setIsDesktop(document.body.clientWidth > 700);\r\n    });\r\n\r\n    const getActiveLine = (e: any) => {\r\n        const time = e.target.classList.value.match(/(_h_|_min_).+/)[0];\r\n        const currTimeUnits = document.getElementsByClassName(`TimeUnit${time}`);\r\n        const currActiveTimeUnits = document.getElementsByClassName(`TimeUnit${time} TimeUnit_selected`);\r\n        \r\n        if (currActiveTimeUnits.length === currTimeUnits.length) {\r\n            for (let i = 0; i < currTimeUnits.length; i++) {\r\n                currTimeUnits[i].classList.toggle('TimeUnit_selected');\r\n            }\r\n        } else {\r\n            for (let i = 0; i < currTimeUnits.length; i++) {\r\n                currTimeUnits[i].classList.add('TimeUnit_selected');\r\n            }\r\n        }\r\n    };\r\n\r\n    const makeGrid = () => {\r\n        const timeUnits = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / 24) * timeUnitValueInMins + timeUnitValueInMins;\r\n                if (i % 24 === 0) {\r\n                    timeUnits.push(<div\r\n                        key={`time-${i}`}\r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {minutes: true, min: val})}\r\n                    >{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit\r\n                    h={i % 24 + 1}\r\n                    min={val}\r\n                    key={i} \r\n                />);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / unitsPerHour) + 1;\r\n                if (i % unitsPerHour === 0) {\r\n                    timeUnits.push(<div \r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit \r\n                    h={val}\r\n                    min={i % unitsPerHour * timeUnitValueInMins + timeUnitValueInMins}\r\n                    key={i} \r\n                />);\r\n            }\r\n        }\r\n        \r\n\r\n        return timeUnits;\r\n    };\r\n\r\n    const makeHoursLine = () => {\r\n        const hoursLine = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i <= 24; i++) {\r\n                const val = i ? i : '';\r\n                hoursLine.push(<div\r\n                    key={i}\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return hoursLine;\r\n    };\r\n\r\n    const makeMinutesLine = () => {\r\n        const minutesLine = [];\r\n\r\n        if (!isDesktop) {\r\n            for (let i = 0; i <= unitsPerHour; i++) {\r\n                const val = i ? i * timeUnitValueInMins : '';\r\n                minutesLine.push(<div\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {minutes: true, min: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return minutesLine;\r\n    };\r\n\r\n    return (\r\n        <div className={cnTimeline()}>\r\n            {isDesktop ? makeHoursLine() : makeMinutesLine()}\r\n            {makeGrid()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;","import React, { FC } from 'react';\r\nimport './Layout.scss';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Timeline from '../Timeline/Timeline';\r\n\r\nconst Layout: FC = () => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <Header />\r\n            <Main>\r\n                <Timeline timeUnitValueInMins={5} />\r\n            </Main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { FC } from 'react';\nimport './App.css';\nimport Layout from '../Layout/Layout';\n\nconst App: FC = () => {\n    return (\n        <Layout />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}