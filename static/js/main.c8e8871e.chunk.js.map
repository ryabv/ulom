{"version":3,"sources":["Header/logo.svg","Header/Header.tsx","Main/Main.tsx","TimeUnit/TimeUnit.tsx","Timeline/Timeline.tsx","Layout/Layout.tsx","App/App.tsx","index.tsx"],"names":["module","exports","Header","className","href","src","Logo","alt","Main","children","onClick","e","target","classList","contains","selectedTimeUnits","document","getElementsByClassName","length","remove","makeTimeUnitsUnselected","cnTimeUnit","cn","TimeUnit","min","h","id","classes","String","cnTimeline","Timeline","timeUnitValueInMins","unitsPerHour","unitsPerDay","useState","body","clientWidth","isDesktop","setIsDesktop","isMouseDowned","setIsMouseDowned","start","end","selectedRange","setSelectedRange","Date","now","setNow","selectedHours","setSelectedHours","setTimeout","minsDiff","Math","ceil","getMinutes","getSeconds","timeToRedraw","window","addEventListener","checkIsTimeUnit","el","checkIsTimelineHours","handleMouseDown","t","add","currElId","Number","getAttribute","time","value","match","timeValue","currTimeUnits","querySelectorAll","i","handleMouseMove","endId","nativeEvent","TouchEvent","currEl","elementFromPoint","touches","clientX","clientY","timeUnits","currTimeUnitId","classesWithActiveHours","push","timeUnitsWithActiveHours","join","searchString","RegExp","search","handleMouseUp","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","hoursLine","val","key","hours","makeHoursLine","minutesLine","minutes","makeMinutesLine","floor","isOutdated","getHours","makeGrid","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c8e8871e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ffa9a4a.svg\";","import React, { FC } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './logo.svg';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a href=\"/\">\r\n                <img className=\"Header-Logo\" src={Logo} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { FC } from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main: FC = ({children}) => {\r\n    const makeTimeUnitsUnselected = () => {\r\n        const selectedTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n\r\n        while (selectedTimeUnits.length) {\r\n            selectedTimeUnits[selectedTimeUnits.length - 1].classList.remove('TimeUnit_selected');\r\n        }\r\n    };\r\n\r\n    const handleClick = (e: any) => {\r\n        if (e.target.classList.contains('Main')) {\r\n            makeTimeUnitsUnselected();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main \r\n            onClick={handleClick}\r\n            className=\"Main\"\r\n        >\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { FC } from 'react';\r\nimport './TimeUnit.scss';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeUnit = cn('TimeUnit');\r\n\r\ninterface TimeUnitProps {\r\n    min: number,\r\n    h: number,\r\n    id: number,\r\n    classes: string[]\r\n}\r\n\r\nconst TimeUnit: FC<TimeUnitProps> = ({ min, h, id, classes }) => {\r\n    return (\r\n        <div\r\n            id={String(id)}\r\n            className={`${cnTimeUnit({ h, min })} ${[ ...classes ]}`}\r\n        >\r\n            {/* <div className={cnTimeUnit('Side', {'back': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'left': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'right': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'top': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'bottom': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'front': true})}></div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeUnit;","import React, { FC, useState } from 'react';\r\nimport './Timeline.scss';\r\nimport TimeUnit from '../TimeUnit/TimeUnit'\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeline = cn('Timeline');\r\n\r\ninterface TimelineProps {\r\n    timeUnitValueInMins: number\r\n}\r\n\r\nconst Timeline: FC<TimelineProps> = ({ timeUnitValueInMins }) => {\r\n    const unitsPerHour = 60 / timeUnitValueInMins;\r\n    const unitsPerDay = 24 * unitsPerHour;\r\n    const [ isDesktop, setIsDesktop ] = useState(document.body.clientWidth > 700);\r\n    const [ isMouseDowned, setIsMouseDowned ] = useState(false);\r\n    const [ selectedRange, setSelectedRange ] = useState({start: 0, end: 0});\r\n    const [ now, setNow ] = useState(new Date());\r\n    const [ selectedHours, setSelectedHours ] = useState({start: 0, end: 0});\r\n\r\n    const timeToRedraw = () => {\r\n        const nextTimeToRedraw = Math.ceil(now.getMinutes() / timeUnitValueInMins) * timeUnitValueInMins;\r\n        const minsDiff = nextTimeToRedraw - now.getMinutes();\r\n        const minsToSecs = minsDiff * 60;\r\n        const secsDiff = minsDiff ? minsToSecs - now.getSeconds() : timeUnitValueInMins * 60 - now.getSeconds();\r\n        return secsDiff;\r\n    };\r\n\r\n    setTimeout(() => {\r\n        setNow(new Date());\r\n    }, 1000 * timeToRedraw());\r\n\r\n    window.addEventListener('resize', () => {\r\n        setIsDesktop(document.body.clientWidth > 700);\r\n    });\r\n\r\n    const checkIsTimeUnit = (el: HTMLElement) => {\r\n        if (el.classList.contains('TimeUnit')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkIsTimelineHours = (el: HTMLElement) => {\r\n        if (el.classList.contains('Timeline-Header_hours')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\r\n        const t = e.target as HTMLElement;\r\n\r\n        if (checkIsTimeUnit(t) && !t.classList.contains('TimeUnit_outdated')) {\r\n            t.classList.add('TimeUnit_selected');\r\n            const currElId = Number(t.getAttribute('id'));\r\n            setIsMouseDowned(true);\r\n            setSelectedRange( {start: currElId, end: currElId} );\r\n        } else if (checkIsTimelineHours(t)) {\r\n            setIsMouseDowned(true);\r\n            const time = t.classList.value.match(/(_h_).+/);\r\n            const timeValue = time ? time[0].match(/\\d+/) : '';\r\n            const currTimeUnits = document.querySelectorAll(`.TimeUnit_h_${timeValue ? timeValue[0] : 'nothing'}:not(.TimeUnit_outdated)`);\r\n            \r\n            for (let i = 0; i < currTimeUnits.length; i++) {\r\n                currTimeUnits[i].classList.add('TimeUnit_selected');\r\n            }\r\n            \r\n            if (timeValue) {\r\n                setSelectedHours({ start: Number(timeValue[0]), end: Number(timeValue[0]) });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseMove = (e: React.MouseEvent | React.TouchEvent) => {\r\n        const t = e.target as HTMLElement;\r\n\r\n        if (isMouseDowned) {\r\n            if (checkIsTimeUnit(t)) {\r\n                let endId = 0;\r\n                if (e.nativeEvent instanceof TouchEvent) {\r\n                    const currEl = document.elementFromPoint(e.nativeEvent.touches[0].clientX, e.nativeEvent.touches[0].clientY) as HTMLElement;\r\n                    if (currEl && checkIsTimeUnit(currEl) && !currEl.classList.contains('TimeUnit_outdated')) {\r\n                        endId = Number(currEl.getAttribute('id'));\r\n                        setSelectedRange({ ...selectedRange, end: endId });\r\n                    }\r\n                } else {\r\n                    if (!t.classList.contains('TimeUnit_outdated')) {\r\n                        endId = Number(t.getAttribute('id'));\r\n                        setSelectedRange({ ...selectedRange, end: endId });\r\n                    }\r\n                }\r\n\r\n                const timeUnits = document.getElementsByClassName('TimeUnit');\r\n\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    const currTimeUnitId = Number(timeUnits[i].getAttribute('id'));\r\n                    if (selectedRange.start <= selectedRange.end) {\r\n                        if (currTimeUnitId >= selectedRange.start && currTimeUnitId <= selectedRange.end) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    } else {\r\n                        if (currTimeUnitId >= selectedRange.end && currTimeUnitId <= selectedRange.start) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            } else if (checkIsTimelineHours(t)) {\r\n                let time;\r\n                if (e.nativeEvent instanceof TouchEvent) {\r\n                    const currEl = document.elementFromPoint(e.nativeEvent.touches[0].clientX, e.nativeEvent.touches[0].clientY) as HTMLElement;\r\n                    time = currEl.classList.value.match(/(_h_).+/);\r\n                } else {\r\n                    time = t.classList.value.match(/(_h_).+/);\r\n                }\r\n                \r\n                const timeValue = time ? time[0].match(/\\d+/) : '';\r\n                \r\n                if (timeValue) {\r\n                    setSelectedHours({ ...selectedHours, end: Number(timeValue[0]) });\r\n                }\r\n\r\n                const classesWithActiveHours = [];\r\n                let start, end;\r\n                if (selectedHours.start < selectedHours.end) {\r\n                    start = selectedHours.start;\r\n                    end = selectedHours.end;\r\n                } else {\r\n                    start = selectedHours.end;\r\n                    end = selectedHours.start;\r\n                }\r\n\r\n                for (let i = start; i <= end; i++) {\r\n                    classesWithActiveHours.push(`TimeUnit_h_${i}`);\r\n                }\r\n\r\n                const timeUnitsWithActiveHours = classesWithActiveHours.join('|');\r\n                const searchString = new RegExp(timeUnitsWithActiveHours);\r\n                const timeUnits = document.querySelectorAll('.TimeUnit:not(.TimeUnit_outdated)');\r\n\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    if (~timeUnits[i].classList.value.search(searchString)) {\r\n                        timeUnits[i].classList.add('TimeUnit_selected');\r\n                    } else {\r\n                        timeUnits[i].classList.remove('TimeUnit_selected');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        setIsMouseDowned(false);\r\n    };\r\n\r\n    const makeGrid = () => {\r\n        const timeUnits = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const h = i % 24;\r\n                const min = Math.floor(i / 24) * timeUnitValueInMins;\r\n                const isOutdated = now.getHours() > h || (now.getHours() === h && now.getMinutes() >= min + timeUnitValueInMins);\r\n\r\n                if (i % 24 === 0) {\r\n                    timeUnits.push(<div\r\n                        key={`time-${i}`}\r\n                        className={cnTimeline('Header', {minutes: true, min: min})}\r\n                    >{min ? min : ''}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit\r\n                    id={i * unitsPerHour % unitsPerDay + Math.floor(i * unitsPerHour / unitsPerDay)}\r\n                    h={h}\r\n                    min={min}\r\n                    key={i}\r\n                    classes={isOutdated ? ['TimeUnit_outdated'] : []}\r\n                />);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const h = Math.floor(i / unitsPerHour);\r\n                const min = i % unitsPerHour * timeUnitValueInMins;\r\n                const isOutdated = now.getHours() > h || (now.getHours() === h && now.getMinutes() >= min + timeUnitValueInMins);\r\n\r\n                if (i % unitsPerHour === 0) {\r\n                    timeUnits.push(<div \r\n                        key={`hours-${i}`}\r\n                        className={cnTimeline('Header', {hours: true, h: h})}>{h}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit \r\n                    id={i}\r\n                    h={h}\r\n                    min={min}\r\n                    key={i}\r\n                    classes={isOutdated ? ['TimeUnit_outdated'] : []}\r\n                />);\r\n            }\r\n        }        \r\n\r\n        return timeUnits;\r\n    };\r\n\r\n    const makeHoursLine = () => {\r\n        const hoursLine = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = -1; i <= 23; i++) {\r\n                const val = ~i ? i : '';\r\n                hoursLine.push(<div\r\n                    key={i}\r\n                    className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return hoursLine;\r\n    };\r\n\r\n    const makeMinutesLine = () => {\r\n        const minutesLine = [];\r\n\r\n        if (!isDesktop) {\r\n            for (let i = -1; i < unitsPerHour; i++) {\r\n                const val = ~i ? i * timeUnitValueInMins : '';\r\n                minutesLine.push(<div\r\n                    key={i}\r\n                    className={cnTimeline('Header', {minutes: true, min: val})}>{val ? val : ''}</div>);\r\n            }\r\n        }\r\n\r\n        return minutesLine;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n            onTouchStart={handleMouseDown}\r\n            onTouchMove={handleMouseMove}\r\n            onTouchEnd={handleMouseUp}\r\n            className={cnTimeline()}\r\n        >\r\n            {isDesktop ? makeHoursLine() : makeMinutesLine()}\r\n            {makeGrid()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;","import React, { FC } from 'react';\r\nimport './Layout.scss';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Timeline from '../Timeline/Timeline';\r\n\r\nconst Layout: FC = () => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <Header />\r\n            <Main>\r\n                <Timeline timeUnitValueInMins={5} />\r\n            </Main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { FC } from 'react';\nimport './App.css';\nimport Layout from '../Layout/Layout';\n\nconst App: FC = () => {\n    return (\n        <Layout />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}