{"version":3,"sources":["Header/logo.svg","Header/Header.tsx","Main/Main.tsx","TimeUnit/TimeUnit.tsx","Timeline/Timeline.tsx","Layout/Layout.tsx","App/App.tsx","index.tsx"],"names":["module","exports","Header","className","href","src","Logo","alt","Main","children","onClick","e","target","classList","contains","selectedTimeUnits","document","getElementsByClassName","length","remove","makeTimeUnitsUnselected","cnTimeUnit","cn","TimeUnit","min","h","id","String","cnTimeline","Timeline","timeUnitValueInMins","unitsPerHour","unitsPerDay","useState","body","clientWidth","isDesktop","setIsDesktop","isMouseDowned","setIsMouseDowned","start","end","selectedRange","setSelectedRange","window","addEventListener","checkIsTimeUnit","el","handleMouseDown","add","currElId","Number","getAttribute","handleMouseMove","endId","touches","currEl","elementFromPoint","clientX","clientY","timeUnits","i","currTimeUnitId","handleMouseUp","getActiveLine","time","value","match","currTimeUnits","toggle","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","hoursLine","val","push","key","hours","makeHoursLine","minutesLine","minutes","makeMinutesLine","Math","floor","makeGrid","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca4727ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ffa9a4a.svg\";","import React, { FC } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './logo.svg';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a href=\"/\">\r\n                <img className=\"Header-Logo\" src={Logo} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { FC } from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main: FC = ({children}) => {\r\n    const makeTimeUnitsUnselected = () => {\r\n        const selectedTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n\r\n        while (selectedTimeUnits.length) {\r\n            selectedTimeUnits[selectedTimeUnits.length - 1].classList.remove('TimeUnit_selected');\r\n        }\r\n    };\r\n\r\n    const handleClick = (e: any) => {\r\n        if (e.target.classList.contains('Main')) {\r\n            makeTimeUnitsUnselected();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main \r\n            onClick={handleClick}\r\n            className=\"Main\"\r\n        >\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { FC } from 'react';\r\nimport './TimeUnit.scss';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeUnit = cn('TimeUnit');\r\n\r\ninterface TimeUnitProps {\r\n    min: number,\r\n    h: number,\r\n    id: number\r\n}\r\n\r\nconst TimeUnit: FC<TimeUnitProps> = ({ min, h, id }) => {\r\n    return (\r\n        <div\r\n            id={String(id)}\r\n            className={cnTimeUnit({ h, min })}\r\n        >\r\n            {/* <div className={cnTimeUnit('Side', {'back': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'left': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'right': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'top': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'bottom': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'front': true})}></div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeUnit;","import React, { FC, useState } from 'react';\r\nimport './Timeline.scss';\r\nimport TimeUnit from '../TimeUnit/TimeUnit'\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeline = cn('Timeline');\r\n\r\ninterface TimelineProps {\r\n    timeUnitValueInMins: number\r\n}\r\n\r\nconst Timeline: FC<TimelineProps> = ({ timeUnitValueInMins }) => {\r\n    const unitsPerHour = 60 / timeUnitValueInMins;\r\n    const unitsPerDay = 24 * unitsPerHour;\r\n    const [ isDesktop, setIsDesktop ] = useState(document.body.clientWidth > 700);\r\n    const [ isMouseDowned, setIsMouseDowned ] = useState(false);\r\n    const [ selectedRange, setSelectedRange ] = useState({start: 0, end: 0});\r\n\r\n    window.addEventListener('resize', () => {\r\n        setIsDesktop(document.body.clientWidth > 700);\r\n    });\r\n\r\n    const checkIsTimeUnit = (el: any) => {\r\n        if (el.classList.contains('TimeUnit')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // const makeTimeUnitsUnselected = () => {\r\n    //     const selectedTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n\r\n    //     while (selectedTimeUnits.length) {\r\n    //         selectedTimeUnits[selectedTimeUnits.length - 1].classList.remove('TimeUnit_selected');\r\n    //     }\r\n    // };\r\n\r\n    const handleMouseDown = (e: any) => {\r\n        if (checkIsTimeUnit(e.target)) {\r\n            e.target.classList.add('TimeUnit_selected');\r\n            const currElId = Number((e.target as HTMLElement).getAttribute('id'));\r\n            setIsMouseDowned(true);\r\n            setSelectedRange( {start: currElId, end: currElId} );\r\n        }\r\n    };\r\n\r\n    const handleMouseMove = (e: any) => {\r\n        if (isMouseDowned) {\r\n            if (checkIsTimeUnit(e.target)) {\r\n                let endId = 0;\r\n                if (e.touches) {\r\n                    const currEl = document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY);\r\n                    if (currEl && checkIsTimeUnit(currEl)) {\r\n                        endId = Number(currEl.getAttribute('id'));\r\n                        setSelectedRange({ ...selectedRange, end: endId });\r\n                    }\r\n                } else {\r\n                    endId = Number((e.target as HTMLElement).getAttribute('id'));\r\n                    setSelectedRange({ ...selectedRange, end: endId });\r\n                }\r\n\r\n                \r\n\r\n                const timeUnits = document.getElementsByClassName('TimeUnit');\r\n\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    const currTimeUnitId = Number(timeUnits[i].getAttribute('id'));\r\n                    if (selectedRange.start <= selectedRange.end) {\r\n                        if (currTimeUnitId >= selectedRange.start && currTimeUnitId <= selectedRange.end) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    } else {\r\n                        if (currTimeUnitId >= selectedRange.end && currTimeUnitId <= selectedRange.start) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = (e: any) => {\r\n        setIsMouseDowned(false);\r\n    };\r\n\r\n    const getActiveLine = (e: any) => {\r\n        const time = e.target.classList.value.match(/(_h_|_min_).+/);\r\n\r\n        if (time) {\r\n            const currTimeUnits = document.getElementsByClassName(`TimeUnit${time[0]}`);\r\n            const currActiveTimeUnits = document.getElementsByClassName(`TimeUnit${time[0]} TimeUnit_selected`);\r\n            \r\n            if (currActiveTimeUnits.length === currTimeUnits.length) {\r\n                for (let i = 0; i < currTimeUnits.length; i++) {\r\n                    currTimeUnits[i].classList.toggle('TimeUnit_selected');\r\n                }\r\n            } else {\r\n                for (let i = 0; i < currTimeUnits.length; i++) {\r\n                    currTimeUnits[i].classList.add('TimeUnit_selected');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const makeGrid = () => {\r\n        const timeUnits = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / 24) * timeUnitValueInMins + timeUnitValueInMins;\r\n                if (i % 24 === 0) {\r\n                    timeUnits.push(<div\r\n                        key={`time-${i}`}\r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {minutes: true, min: val})}\r\n                    >{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit\r\n                    id={i}\r\n                    h={i % 24 + 1}\r\n                    min={val}\r\n                    key={i} \r\n                />);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const val = Math.floor(i / unitsPerHour) + 1;\r\n                if (i % unitsPerHour === 0) {\r\n                    timeUnits.push(<div \r\n                        onClick={getActiveLine}\r\n                        className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit \r\n                    id={i}\r\n                    h={val}\r\n                    min={i % unitsPerHour * timeUnitValueInMins + timeUnitValueInMins}\r\n                    key={i} \r\n                />);\r\n            }\r\n        }\r\n        \r\n\r\n        return timeUnits;\r\n    };\r\n\r\n    const makeHoursLine = () => {\r\n        const hoursLine = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i <= 24; i++) {\r\n                const val = i ? i : '';\r\n                hoursLine.push(<div\r\n                    key={i}\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return hoursLine;\r\n    };\r\n\r\n    const makeMinutesLine = () => {\r\n        const minutesLine = [];\r\n\r\n        if (!isDesktop) {\r\n            for (let i = 0; i <= unitsPerHour; i++) {\r\n                const val = i ? i * timeUnitValueInMins : '';\r\n                minutesLine.push(<div\r\n                    onClick={getActiveLine}\r\n                    className={cnTimeline('Header', {minutes: true, min: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return minutesLine;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n            onTouchStart={handleMouseDown}\r\n            onTouchMove={handleMouseMove}\r\n            onTouchEnd={handleMouseUp}\r\n            className={cnTimeline()}\r\n        >\r\n            {isDesktop ? makeHoursLine() : makeMinutesLine()}\r\n            {makeGrid()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;","import React, { FC } from 'react';\r\nimport './Layout.scss';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Timeline from '../Timeline/Timeline';\r\n\r\nconst Layout: FC = () => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <Header />\r\n            <Main>\r\n                <Timeline timeUnitValueInMins={5} />\r\n            </Main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { FC } from 'react';\nimport './App.css';\nimport Layout from '../Layout/Layout';\n\nconst App: FC = () => {\n    return (\n        <Layout />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}