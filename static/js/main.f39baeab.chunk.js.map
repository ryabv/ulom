{"version":3,"sources":["components/Header/logo.svg","components/Header/Header.tsx","components/Main/Main.tsx","components/TimeUnit/TimeUnit.tsx","components/ShortcutMenu/ShortcutMenu.tsx","components/Timeline/Timeline.tsx","components/Layout/Layout.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","Header","className","href","src","Logo","alt","Main","children","onClick","e","target","classList","contains","selectedTimeUnits","document","getElementsByClassName","remove","length","makeTimeUnitsUnselected","cnTimeUnit","cn","TimeUnit","min","h","id","classes","String","cnShortcutMenu","ShortcutMenu","visible","x","y","style","left","isMobile","top","work","rest","gym","sleep","cnTimeline","Timeline","timeUnitValueInMins","unitsPerHour","unitsPerDay","useState","body","clientWidth","isDesktop","setIsDesktop","isMouseDowned","setIsMouseDowned","start","end","selectedRange","setSelectedRange","Date","now","setNow","selectedHours","setSelectedHours","showShortcutMenu","setShowShortcutMenu","coordsForShortcutMenu","setCordsForShortcutMenu","coordsForTouch","setCoordsForTouch","setTimeout","minsDiff","Math","ceil","getMinutes","getSeconds","timeToRedraw","window","addEventListener","checkIsTimeUnit","el","checkIsTimelineHours","handleMouseDown","t","add","currElId","Number","getAttribute","time","value","match","timeValue","currTimeUnits","querySelectorAll","i","search","colorClass","activeTimeUnits","color","replace","handleMouseMove","endId","nativeEvent","TouchEvent","currEl","elementFromPoint","touches","clientX","clientY","timeUnits","currTimeUnitId","classesWithActiveHours","push","timeUnitsWithActiveHours","join","searchString","RegExp","handleMouseUp","timeline","getBoundingClientRect","round","pageX","pageY","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","hoursLine","val","key","hours","makeHoursLine","minutesLine","minutes","makeMinutesLine","floor","isOutdated","getHours","makeGrid","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f39baeab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ffa9a4a.svg\";","import React, { FC } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './logo.svg';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <a href=\"/\">\r\n                <img className=\"Header-Logo\" src={Logo} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { FC } from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main: FC = ({children}) => {\r\n    const makeTimeUnitsUnselected = () => {\r\n        const selectedTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n        const shortcutMenu = document.getElementsByClassName('ShortcutMenu')[0];\r\n        shortcutMenu.classList.remove('ShortcutMenu_visible');\r\n\r\n        while (selectedTimeUnits.length) {\r\n            selectedTimeUnits[selectedTimeUnits.length - 1].classList.remove('TimeUnit_selected');\r\n        }\r\n    };\r\n\r\n    const handleClick = (e: any) => {\r\n        if (e.target.classList.contains('Main')) {\r\n            makeTimeUnitsUnselected();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main \r\n            onClick={handleClick}\r\n            className=\"Main\"\r\n        >\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { FC } from 'react';\r\nimport './TimeUnit.scss';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeUnit = cn('TimeUnit');\r\n\r\ninterface TimeUnitProps {\r\n    min: number,\r\n    h: number,\r\n    id: number,\r\n    classes: string[]\r\n}\r\n\r\nconst TimeUnit: FC<TimeUnitProps> = ({ min, h, id, classes }) => {\r\n    return (\r\n        <div\r\n            id={String(id)}\r\n            className={`${cnTimeUnit({ h, min })} ${[ ...classes ]}`}\r\n        >\r\n            {/* <div className={cnTimeUnit('Side', {'back': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'left': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'right': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'top': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'bottom': true})}></div>\r\n            <div className={cnTimeUnit('Side', {'front': true})}></div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeUnit;","import React, { FC } from 'react';\r\nimport { cn } from '@bem-react/classname';\r\nimport './ShortcutMenu.scss';\r\n\r\nconst cnShortcutMenu = cn('ShortcutMenu');\r\n\r\ninterface ShortcutMenuProps {\r\n    visible: boolean,\r\n    x: number,\r\n    y: number,\r\n    isMobile: boolean\r\n}\r\n\r\nconst ShortcutMenu: FC<ShortcutMenuProps> = ({ visible, x, y, isMobile }) => {\r\n    const style = {\r\n        left: isMobile ? '50%' : `${x}px`,\r\n        top: `${y}px`,\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className={visible ? cnShortcutMenu({ visible: true }) : cnShortcutMenu()}\r\n            style={style}\r\n        >\r\n            <div className={cnShortcutMenu('Color', { work: true })}></div>\r\n            <div className={cnShortcutMenu('Color', { rest: true })}></div>\r\n            <div className={cnShortcutMenu('Color', { gym: true })}></div>\r\n            <div className={cnShortcutMenu('Color', { sleep: true })}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShortcutMenu;","import React, { FC, useState } from 'react';\r\nimport './Timeline.scss';\r\nimport TimeUnit from '../TimeUnit/TimeUnit'\r\nimport ShortcutMenu from '../ShortcutMenu/ShortcutMenu';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nconst cnTimeline = cn('Timeline');\r\n\r\ninterface TimelineProps {\r\n    timeUnitValueInMins: number\r\n}\r\n\r\nconst Timeline: FC<TimelineProps> = ({ timeUnitValueInMins }) => {\r\n    const unitsPerHour = 60 / timeUnitValueInMins;\r\n    const unitsPerDay = 24 * unitsPerHour;\r\n    const [ isDesktop, setIsDesktop ] = useState(document.body.clientWidth > 700);\r\n    const [ isMouseDowned, setIsMouseDowned ] = useState(false);\r\n    const [ selectedRange, setSelectedRange ] = useState({start: 0, end: 0});\r\n    const [ now, setNow ] = useState(new Date());\r\n    const [ selectedHours, setSelectedHours ] = useState({start: 0, end: 0});\r\n    const [ showShortcutMenu, setShowShortcutMenu ] = useState(false);\r\n    const [ coordsForShortcutMenu, setCordsForShortcutMenu ] = useState({x: 0, y: 0});\r\n    const [ coordsForTouch, setCoordsForTouch ] = useState({x: 0, y: 0});\r\n\r\n    const timeToRedraw = () => {\r\n        const nextTimeToRedraw = Math.ceil(now.getMinutes() / timeUnitValueInMins) * timeUnitValueInMins;\r\n        const minsDiff = nextTimeToRedraw - now.getMinutes();\r\n        const minsToSecs = minsDiff * 60;\r\n        const secsDiff = minsDiff ? minsToSecs - now.getSeconds() : timeUnitValueInMins * 60 - now.getSeconds();\r\n        return secsDiff;\r\n    };\r\n\r\n    setTimeout(() => {\r\n        setNow(new Date());\r\n    }, 1000 * timeToRedraw());\r\n\r\n    window.addEventListener('resize', () => {\r\n        setIsDesktop(document.body.clientWidth > 700);\r\n    });\r\n\r\n    const checkIsTimeUnit = (el: HTMLElement) => {\r\n        if (el.classList.contains('TimeUnit')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkIsTimelineHours = (el: HTMLElement) => {\r\n        if (el.classList.contains('Timeline-Header_hours')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkIsShortcutMenu = (el: HTMLElement) => {\r\n        if (~el.classList.value.search('ShortcutMenu')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkIsShortcutMenuItem = (el: HTMLElement) => {\r\n        if (~el.classList.value.search('ShortcutMenu-Color')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\r\n        const t = e.target as HTMLElement;\r\n\r\n        if (checkIsTimeUnit(t) && !t.classList.contains('TimeUnit_outdated')) {\r\n            setShowShortcutMenu(false);\r\n            t.classList.add('TimeUnit_selected');\r\n            const currElId = Number(t.getAttribute('id'));\r\n            setIsMouseDowned(true);\r\n            setSelectedRange( {start: currElId, end: currElId} );\r\n        } else if (checkIsTimelineHours(t)) {\r\n            setShowShortcutMenu(false);\r\n            setIsMouseDowned(true);\r\n            const time = t.classList.value.match(/(_h_).+/);\r\n            const timeValue = time ? time[0].match(/\\d+/) : '';\r\n            const currTimeUnits = document.querySelectorAll(`.TimeUnit_h_${timeValue ? timeValue[0] : 'nothing'}:not(.TimeUnit_outdated)`);\r\n            \r\n            for (let i = 0; i < currTimeUnits.length; i++) {\r\n                currTimeUnits[i].classList.add('TimeUnit_selected');\r\n            }\r\n            \r\n            if (timeValue) {\r\n                setSelectedHours({ start: Number(timeValue[0]), end: Number(timeValue[0]) });\r\n            }\r\n        } else if (checkIsShortcutMenuItem(t)) {\r\n            const colorClass = t.classList.value.match(/ShortcutMenu-Color_\\w+/);\r\n            const activeTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n            if (colorClass && activeTimeUnits.length) {\r\n                const color = colorClass[0].match(/_\\w+/);\r\n                for (let i = 0; i < activeTimeUnits.length; i++) {\r\n                    activeTimeUnits[i].classList.value = activeTimeUnits[i].classList.value.replace(/TimeUnit_case_\\w+/g, '');\r\n                    activeTimeUnits[i].classList.add(`TimeUnit_case${color}`);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseMove = (e: React.MouseEvent | React.TouchEvent) => {\r\n        const t = e.target as HTMLElement;\r\n\r\n        if (isMouseDowned) {\r\n            if (checkIsTimeUnit(t)) {\r\n                let endId = 0;\r\n                if (e.nativeEvent instanceof TouchEvent) {\r\n                    const currEl = document.elementFromPoint(e.nativeEvent.touches[0].clientX, e.nativeEvent.touches[0].clientY) as HTMLElement;\r\n                    if (currEl && checkIsTimeUnit(currEl) && !currEl.classList.contains('TimeUnit_outdated')) {\r\n                        endId = Number(currEl.getAttribute('id'));\r\n                        setSelectedRange({ ...selectedRange, end: endId });\r\n                    }\r\n                    setCoordsForTouch({ x: e.nativeEvent.touches[0].clientX, y: e.nativeEvent.touches[0].clientY });\r\n                } else {\r\n                    if (!t.classList.contains('TimeUnit_outdated')) {\r\n                        endId = Number(t.getAttribute('id'));\r\n                        setSelectedRange({ ...selectedRange, end: endId });\r\n                    }\r\n                }\r\n\r\n                const timeUnits = document.getElementsByClassName('TimeUnit');\r\n\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    const currTimeUnitId = Number(timeUnits[i].getAttribute('id'));\r\n                    if (selectedRange.start <= selectedRange.end) {\r\n                        if (currTimeUnitId >= selectedRange.start && currTimeUnitId <= selectedRange.end) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    } else {\r\n                        if (currTimeUnitId >= selectedRange.end && currTimeUnitId <= selectedRange.start) {\r\n                            timeUnits[i].classList.add('TimeUnit_selected');\r\n                        } else {\r\n                            timeUnits[i].classList.remove('TimeUnit_selected');\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            } else if (checkIsTimelineHours(t)) {\r\n                let time;\r\n                if (e.nativeEvent instanceof TouchEvent) {\r\n                    const currEl = document.elementFromPoint(e.nativeEvent.touches[0].clientX, e.nativeEvent.touches[0].clientY) as HTMLElement;\r\n                    time = currEl.classList.value.match(/(_h_).+/);\r\n                    setCoordsForTouch({ x: e.nativeEvent.touches[0].clientX, y: e.nativeEvent.touches[0].clientY });\r\n                } else {\r\n                    time = t.classList.value.match(/(_h_).+/);\r\n                }\r\n                \r\n                const timeValue = time ? time[0].match(/\\d+/) : '';\r\n                \r\n                if (timeValue) {\r\n                    setSelectedHours({ ...selectedHours, end: Number(timeValue[0]) });\r\n                }\r\n\r\n                const classesWithActiveHours = [];\r\n                let start, end;\r\n                if (selectedHours.start < selectedHours.end) {\r\n                    start = selectedHours.start;\r\n                    end = selectedHours.end;\r\n                } else {\r\n                    start = selectedHours.end;\r\n                    end = selectedHours.start;\r\n                }\r\n\r\n                for (let i = start; i <= end; i++) {\r\n                    classesWithActiveHours.push(`TimeUnit_h_${i}`);\r\n                }\r\n\r\n                const timeUnitsWithActiveHours = classesWithActiveHours.join('|');\r\n                const searchString = new RegExp(timeUnitsWithActiveHours);\r\n                const timeUnits = document.querySelectorAll('.TimeUnit:not(.TimeUnit_outdated)');\r\n\r\n                for (let i = 0; i < timeUnits.length; i++) {\r\n                    if (~timeUnits[i].classList.value.search(searchString)) {\r\n                        timeUnits[i].classList.add('TimeUnit_selected');\r\n                    } else {\r\n                        timeUnits[i].classList.remove('TimeUnit_selected');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = (e: React.MouseEvent | React.TouchEvent) => {\r\n        setIsMouseDowned(false);\r\n        const activeTimeUnits = document.getElementsByClassName('TimeUnit_selected');\r\n        if (activeTimeUnits.length) {\r\n            const timeline = document.getElementsByClassName('Timeline')[0];\r\n            if (e.nativeEvent instanceof TouchEvent) {\r\n                const x = coordsForTouch.x - timeline.getBoundingClientRect().left;\r\n                const y = activeTimeUnits[0].getBoundingClientRect().top - timeline.getBoundingClientRect().top;\r\n                setCordsForShortcutMenu({x, y});\r\n                setShowShortcutMenu(true);\r\n            } else {\r\n                if (!checkIsShortcutMenu(e.nativeEvent.target as HTMLElement)) {\r\n                    const x = Math.round(e.nativeEvent.pageX - timeline.getBoundingClientRect().left);\r\n                    const y = Math.round(e.nativeEvent.pageY - timeline.getBoundingClientRect().top);\r\n                    setCordsForShortcutMenu({x, y});\r\n                    setShowShortcutMenu(true);\r\n                }\r\n            }\r\n        } else {\r\n            setShowShortcutMenu(false);\r\n        }\r\n    };\r\n\r\n    const makeGrid = () => {\r\n        const timeUnits = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const h = i % 24;\r\n                const min = Math.floor(i / 24) * timeUnitValueInMins;\r\n                const isOutdated = now.getHours() > h || (now.getHours() === h && now.getMinutes() >= min + timeUnitValueInMins);\r\n\r\n                if (i % 24 === 0) {\r\n                    timeUnits.push(<div\r\n                        key={`time-${i}`}\r\n                        className={cnTimeline('Header', {minutes: true, min: min})}\r\n                    >{min ? min : ''}</div>);\r\n                }\r\n\r\n                timeUnits.push(<TimeUnit\r\n                    id={i * unitsPerHour % unitsPerDay + Math.floor(i * unitsPerHour / unitsPerDay)}\r\n                    h={h}\r\n                    min={min}\r\n                    key={i}\r\n                    classes={isOutdated ? ['TimeUnit_outdated'] : []}\r\n                />);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < unitsPerDay; i++) {\r\n                const h = Math.floor(i / unitsPerHour);\r\n                const min = i % unitsPerHour * timeUnitValueInMins;\r\n                const isOutdated = now.getHours() > h || (now.getHours() === h && now.getMinutes() >= min + timeUnitValueInMins);\r\n\r\n                if (i % unitsPerHour === 0) {\r\n                    timeUnits.push(<div \r\n                        key={`hours-${i}`}\r\n                        className={cnTimeline('Header', {hours: true, h: h})}>{h}</div>);\r\n                }\r\n    \r\n                timeUnits.push(<TimeUnit \r\n                    id={i}\r\n                    h={h}\r\n                    min={min}\r\n                    key={i}\r\n                    classes={isOutdated ? ['TimeUnit_outdated'] : []}\r\n                />);\r\n            }\r\n        }        \r\n\r\n        return timeUnits;\r\n    };\r\n\r\n    const makeHoursLine = () => {\r\n        const hoursLine = [];\r\n\r\n        if (isDesktop) {\r\n            for (let i = -1; i <= 23; i++) {\r\n                const val = ~i ? i : '';\r\n                hoursLine.push(<div\r\n                    key={i}\r\n                    className={cnTimeline('Header', {hours: true, h: val})}>{val}</div>);\r\n            }\r\n        }\r\n\r\n        return hoursLine;\r\n    };\r\n\r\n    const makeMinutesLine = () => {\r\n        const minutesLine = [];\r\n\r\n        if (!isDesktop) {\r\n            for (let i = -1; i < unitsPerHour; i++) {\r\n                const val = ~i ? i * timeUnitValueInMins : '';\r\n                minutesLine.push(<div\r\n                    key={i}\r\n                    className={cnTimeline('Header', {minutes: true, min: val})}>{val ? val : ''}</div>);\r\n            }\r\n        }\r\n\r\n        return minutesLine;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n            onTouchStart={handleMouseDown}\r\n            onTouchMove={handleMouseMove}\r\n            onTouchEnd={handleMouseUp}\r\n            className={cnTimeline()}\r\n        >\r\n            {isDesktop ? makeHoursLine() : makeMinutesLine()}\r\n            {makeGrid()}\r\n            <ShortcutMenu \r\n                isMobile={!isDesktop}\r\n                visible={showShortcutMenu} \r\n                x={coordsForShortcutMenu.x} \r\n                y={coordsForShortcutMenu.y} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;","import React, { FC } from 'react';\r\nimport './Layout.scss';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Timeline from '../Timeline/Timeline';\r\n\r\nconst Layout: FC = () => {\r\n    return (\r\n        <div className=\"Layout\">\r\n            <Header />\r\n            <Main>\r\n                <Timeline timeUnitValueInMins={5} />\r\n            </Main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { FC } from 'react';\nimport './App.css';\nimport Layout from '../Layout/Layout';\n\nconst App: FC = () => {\n    return (\n        <Layout />\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}